{"ast":null,"code":"import _toConsumableArray from\"C:/Users/gui_l/Desktop/Projetos/Projeto-provi/projeto-provi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/gui_l/Desktop/Projetos/Projeto-provi/projeto-provi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import GlobalContext from\"./GlobalContext\";import{BASE_URL,KEY_API}from\"../constantes/urls\";import useRequestData from'../hooks/useRequestData';import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var GlobalState=function GlobalState(props){var coverMovie=useRequestData([],\"\".concat(BASE_URL,\"/discover/tv?with_network=213&language=pt-BR&api_key=\").concat(KEY_API));var originais=useRequestData([],\"\".concat(BASE_URL,\"/discover/tv?with_network=213&language=pt-BR&api_key=\").concat(KEY_API));var recomended=useRequestData([],\"\".concat(BASE_URL,\"/trending/all/week?language=pt-BR&api_key=\").concat(KEY_API));var top=useRequestData([],\"\".concat(BASE_URL,\"/movie/top_rated?language=pt-BR&api_key=\").concat(KEY_API));var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),comment=_useState2[0],setComment=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),name=_useState4[0],setName=_useState4[1];var _useState5=useState([{name:\"Bob\",comment:\"Adorei os titulos!!\"}]),_useState6=_slicedToArray(_useState5,2),listComment=_useState6[0],setListCommet=_useState6[1];var sendComment=function sendComment(){var newComment={name:name,comment:comment};var newList=[newComment].concat(_toConsumableArray(listComment));setListCommet(newList);setComment(\"\");setName(\"\");};var state={name:name,setName:setName,comment:comment,setComment:setComment,listComment:listComment};var setters={sendComment:sendComment};var requests={coverMovie:coverMovie,originais:originais,recomended:recomended,top:top};return/*#__PURE__*/_jsx(GlobalContext.Provider,{value:{state:state,setters:setters,requests:requests},children:props.children});};export default GlobalState;","map":{"version":3,"sources":["C:/Users/gui_l/Desktop/projetos/Projeto-provi/projeto-provi/src/global/GlobalState.js"],"names":["GlobalContext","BASE_URL","KEY_API","useRequestData","useState","GlobalState","props","coverMovie","originais","recomended","top","comment","setComment","name","setName","listComment","setListCommet","sendComment","newComment","newList","state","setters","requests","children"],"mappings":"4WAAA,MAAOA,CAAAA,aAAP,KAA0B,iBAA1B,CACA,OAASC,QAAT,CAAmBC,OAAnB,KAAkC,oBAAlC,CACA,MAAOC,CAAAA,cAAP,KAA2B,yBAA3B,CACA,OAASC,QAAT,KAAyB,OAAzB,C,2CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAE3B,GAAMC,CAAAA,UAAU,CAAGJ,cAAc,CAAE,EAAF,WAC1BF,QAD0B,iEACsCC,OADtC,EAAjC,CAIA,GAAMM,CAAAA,SAAS,CAAGL,cAAc,CAAE,EAAF,WACzBF,QADyB,iEACuCC,OADvC,EAAhC,CAIA,GAAMO,CAAAA,UAAU,CAAGN,cAAc,CAAE,EAAF,WAC1BF,QAD0B,sDAC2BC,OAD3B,EAAjC,CAIA,GAAMQ,CAAAA,GAAG,CAAGP,cAAc,CAAE,EAAF,WACnBF,QADmB,oDACgCC,OADhC,EAA1B,CAIA,cAA8BE,QAAQ,CAAC,EAAD,CAAtC,wCAAOO,OAAP,eAAgBC,UAAhB,eACA,eAAwBR,QAAQ,CAAC,EAAD,CAAhC,yCAAOS,IAAP,eAAaC,OAAb,eAEA,eAAqCV,QAAQ,CAAC,CAC1C,CACIS,IAAI,CAAE,KADV,CAEIF,OAAO,CAAE,qBAFb,CAD0C,CAAD,CAA7C,yCAAOI,WAAP,eAAoBC,aAApB,eAOA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtB,GAAMC,CAAAA,UAAU,CAAG,CACfL,IAAI,CAAEA,IADS,CAEfF,OAAO,CAAEA,OAFM,CAAnB,CAIA,GAAMQ,CAAAA,OAAO,EAAID,UAAJ,4BAAmBH,WAAnB,EAAb,CACAC,aAAa,CAAEG,OAAF,CAAb,CACAP,UAAU,CAAE,EAAF,CAAV,CACAE,OAAO,CAAE,EAAF,CAAP,CACH,CATD,CAWA,GAAMM,CAAAA,KAAK,CAAG,CAACP,IAAI,CAAJA,IAAD,CAAOC,OAAO,CAAPA,OAAP,CAAgBH,OAAO,CAAPA,OAAhB,CAAyBC,UAAU,CAAVA,UAAzB,CAAqCG,WAAW,CAAXA,WAArC,CAAd,CACA,GAAMM,CAAAA,OAAO,CAAG,CAACJ,WAAW,CAAXA,WAAD,CAAhB,CACA,GAAMK,CAAAA,QAAQ,CAAG,CAACf,UAAU,CAAVA,UAAD,CAAaC,SAAS,CAATA,SAAb,CAAwBC,UAAU,CAAVA,UAAxB,CAAoCC,GAAG,CAAHA,GAApC,CAAjB,CAEA,mBACI,KAAC,aAAD,CAAe,QAAf,EAAwB,KAAK,CAAI,CAACU,KAAK,CAALA,KAAD,CAAQC,OAAO,CAAPA,OAAR,CAAiBC,QAAQ,CAARA,QAAjB,CAAjC,UACIhB,KAAK,CAACiB,QADV,EADJ,CAKH,CAhDD,CAkDA,cAAelB,CAAAA,WAAf","sourcesContent":["import GlobalContext from \"./GlobalContext\"\r\nimport { BASE_URL, KEY_API } from \"../constantes/urls\"\r\nimport useRequestData from '../hooks/useRequestData'\r\nimport { useState } from \"react\"\r\n\r\nconst GlobalState = (props) => {\r\n\r\n    const coverMovie = useRequestData ([], \r\n        `${BASE_URL}/discover/tv?with_network=213&language=pt-BR&api_key=${KEY_API}`\r\n    )\r\n    \r\n    const originais = useRequestData ([], \r\n        `${BASE_URL}/discover/tv?with_network=213&language=pt-BR&api_key=${KEY_API}`\r\n    ) \r\n\r\n    const recomended = useRequestData ([], \r\n        `${BASE_URL}/trending/all/week?language=pt-BR&api_key=${KEY_API}`\r\n    )\r\n\r\n    const top = useRequestData ([], \r\n        `${BASE_URL}/movie/top_rated?language=pt-BR&api_key=${KEY_API}`\r\n    )\r\n\r\n    const [comment, setComment] = useState(\"\")\r\n    const [name, setName] = useState(\"\")\r\n\r\n    const [listComment, setListCommet] = useState([\r\n        {\r\n            name: \"Bob\",\r\n            comment: \"Adorei os titulos!!\"\r\n        }\r\n    ])\r\n\r\n    const sendComment = () => {\r\n        const newComment = {\r\n            name: name,\r\n            comment: comment\r\n        }\r\n        const newList = [newComment, ...listComment]\r\n        setListCommet (newList)\r\n        setComment (\"\")\r\n        setName (\"\")\r\n    }\r\n\r\n    const state = {name, setName, comment, setComment, listComment}\r\n    const setters = {sendComment}\r\n    const requests = {coverMovie, originais, recomended, top}\r\n\r\n    return (\r\n        <GlobalContext.Provider value = {{state, setters, requests}}>\r\n           {props.children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n\r\nexport default GlobalState"]},"metadata":{},"sourceType":"module"}