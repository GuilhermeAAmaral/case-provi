{"ast":null,"code":"import _slicedToArray from\"C:/Users/gui_l/Desktop/Projetos/Projeto-provi/projeto-provi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import axios from'axios';var useRequestData=function useRequestData(initialData,url){var _useState=useState(initialData),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];useEffect(function(){axios.get(url,{headers:{Authorization:localStorage.getItem('token')}}).then(function(res){setData(res.data.results);}).catch(function(err){console.log(err);alert('Ocorreu um erro, tente novamente');});},[url]);return data;};export default useRequestData;","map":{"version":3,"sources":["C:/Users/gui_l/Desktop/Projetos/Projeto-provi/projeto-provi/src/hooks/useRequestData.js"],"names":["useEffect","useState","axios","useRequestData","initialData","url","data","setData","get","headers","Authorization","localStorage","getItem","then","res","results","catch","err","console","log","alert"],"mappings":"kLAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,WAAD,CAAcC,GAAd,CAAsB,CACzC,cAAwBJ,QAAQ,CAACG,WAAD,CAAhC,wCAAOE,IAAP,eAAaC,OAAb,eAEAP,SAAS,CAAE,UAAM,CAEbE,KAAK,CAACM,GAAN,CAAWH,GAAX,CAAgB,CACZI,OAAO,CAAE,CACLC,aAAa,CAAEC,YAAY,CAACC,OAAb,CAAsB,OAAtB,CADV,CADG,CAAhB,EAKCC,IALD,CAKO,SAACC,GAAD,CAAS,CACZP,OAAO,CAAEO,GAAG,CAACR,IAAJ,CAASS,OAAX,CAAP,CACH,CAPD,EASCC,KATD,CASQ,SAACC,GAAD,CAAS,CACbC,OAAO,CAACC,GAAR,CAAaF,GAAb,EACAG,KAAK,CAAE,kCAAF,CAAL,CACH,CAZD,EAaH,CAfQ,CAeN,CAACf,GAAD,CAfM,CAAT,CAiBA,MAAQC,CAAAA,IAAR,CACH,CArBD,CAuBA,cAAeH,CAAAA,cAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from 'axios'\r\n\r\nconst useRequestData = (initialData, url) => {\r\n    const [data, setData] = useState(initialData)\r\n\r\n    useEffect (() => { \r\n        \r\n        axios.get (url, {\r\n            headers: {\r\n                Authorization: localStorage.getItem ('token')\r\n            }\r\n        })\r\n        .then ((res) => {\r\n            setData (res.data.results)\r\n        })\r\n\r\n        .catch ((err) => {\r\n            console.log (err)\r\n            alert ('Ocorreu um erro, tente novamente')\r\n        })\r\n    }, [url])\r\n\r\n    return (data)\r\n}\r\n\r\nexport default useRequestData"]},"metadata":{},"sourceType":"module"}