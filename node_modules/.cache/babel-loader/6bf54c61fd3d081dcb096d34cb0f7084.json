{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gui_l\\\\Desktop\\\\Projetos\\\\Projeto-provi\\\\projeto-provi\\\\src\\\\pages\\\\HomePage\\\\HomePage.js\",\n    _s = $RefreshSig$();\n\nimport { BASE_URL, KEY_API } from '../../constantes/urls';\nimport useRequestData from '../../hooks/useRequestData';\nimport MoviesOriginaisNetflix from '../../components/Movies/MoviesOriginaisNetfliex';\nimport MoviesRecomended from \"../../components/Movies/MoviesRecomended\";\nimport MoviesTop from \"../../components/Movies/MoviesTop\";\nimport MoviesAction from \"../../components/Movies/MoviesAction\";\nimport MoviesComedy from \"../../components/Movies/MoviesComedy\";\nimport { ContainerPrincipal, ContainerTopCoverMovie } from './styled';\nimport TopCoverMovie from '../../components/CoverMovie/TopCoverMovie';\nimport { goToMovie } from '../../routers/cordinator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = () => {\n  _s();\n\n  const coverMovie = useRequestData([], `${BASE_URL}/discover/tv?with_network=213&language=pt-BR&api_key=${KEY_API}`);\n  const originais = useRequestData([], `${BASE_URL}/discover/tv?with_network=213&language=pt-BR&api_key=${KEY_API}`);\n  const recomended = useRequestData([], `${BASE_URL}/trending/all/week?language=pt-BR&api_key=${KEY_API}`);\n  const top = useRequestData([], `${BASE_URL}/movie/top_rated?language=pt-BR&api_key=${KEY_API}`);\n  const action = useRequestData([], `${BASE_URL}/discover/movie?with_genres=28&language=pt-BR&api_key=${KEY_API}`);\n  const comedy = useRequestData([], `${BASE_URL}/discover/movie?with_genres=35&language=pt-BR&api_key=${KEY_API}`);\n  const coverMovieRandon = Math.floor(Math.random() * (coverMovie.length - 1));\n  const movieRandon = coverMovie[coverMovieRandon];\n  const history = useHistory();\n\n  const onClickCard = () => {\n    goToMovie(history, \"batata\");\n  };\n\n  const originaisNet = originais.map(index => {\n    return /*#__PURE__*/_jsxDEV(MoviesOriginaisNetflix, {\n      index: index,\n      onClick: onClickCard\n    }, index.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this);\n  });\n  const recomendedNet = recomended.map(index => {\n    return /*#__PURE__*/_jsxDEV(MoviesRecomended, {\n      index: index\n    }, index.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  });\n  const topNet = top.map(index => {\n    return /*#__PURE__*/_jsxDEV(MoviesTop, {\n      index: index\n    }, index.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this);\n  });\n  const topAction = action.map(index => {\n    return /*#__PURE__*/_jsxDEV(MoviesAction, {\n      index: index\n    }, index.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }, this);\n  });\n  const topComedy = comedy.map(index => {\n    return /*#__PURE__*/_jsxDEV(MoviesComedy, {\n      index: index\n    }, index.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(ContainerPrincipal, {\n    children: [/*#__PURE__*/_jsxDEV(ContainerTopCoverMovie, {\n      children: /*#__PURE__*/_jsxDEV(TopCoverMovie, {\n        movieRandon: movieRandon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Originais Netflix\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), originaisNet, /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recomendados para Voc\\xEA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), recomendedNet, /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Em Alta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), topNet, /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"A\\xE7\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), topAction, /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Com\\xE9dia\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), topComedy]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HomePage, \"J83zzgi42iMyPjBtEKN8a7gZqCk=\", true, function () {\n  return [useRequestData, useRequestData, useRequestData, useRequestData, useRequestData, useRequestData];\n});\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/gui_l/Desktop/Projetos/Projeto-provi/projeto-provi/src/pages/HomePage/HomePage.js"],"names":["BASE_URL","KEY_API","useRequestData","MoviesOriginaisNetflix","MoviesRecomended","MoviesTop","MoviesAction","MoviesComedy","ContainerPrincipal","ContainerTopCoverMovie","TopCoverMovie","goToMovie","HomePage","coverMovie","originais","recomended","top","action","comedy","coverMovieRandon","Math","floor","random","length","movieRandon","history","useHistory","onClickCard","originaisNet","map","index","id","recomendedNet","topNet","topAction","topComedy"],"mappings":"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","sourcesContent":["import { BASE_URL, KEY_API } from '../../constantes/urls'\r\nimport useRequestData from '../../hooks/useRequestData'\r\nimport MoviesOriginaisNetflix from '../../components/Movies/MoviesOriginaisNetfliex'\r\nimport MoviesRecomended from \"../../components/Movies/MoviesRecomended\"\r\nimport MoviesTop from \"../../components/Movies/MoviesTop\"\r\nimport MoviesAction from \"../../components/Movies/MoviesAction\"\r\nimport MoviesComedy from \"../../components/Movies/MoviesComedy\"\r\nimport { ContainerPrincipal, ContainerTopCoverMovie} from './styled'\r\nimport TopCoverMovie from '../../components/CoverMovie/TopCoverMovie'\r\nimport { goToMovie } from '../../routers/cordinator'\r\n\r\nconst HomePage = () => {\r\n\r\n    const coverMovie = useRequestData ([], \r\n        `${BASE_URL}/discover/tv?with_network=213&language=pt-BR&api_key=${KEY_API}`\r\n    )\r\n    \r\n    const originais = useRequestData ([], \r\n        `${BASE_URL}/discover/tv?with_network=213&language=pt-BR&api_key=${KEY_API}`\r\n    ) \r\n\r\n    const recomended = useRequestData ([], \r\n        `${BASE_URL}/trending/all/week?language=pt-BR&api_key=${KEY_API}`\r\n    )\r\n\r\n    const top = useRequestData ([], \r\n        `${BASE_URL}/movie/top_rated?language=pt-BR&api_key=${KEY_API}`\r\n    )\r\n \r\n    const action = useRequestData ([], \r\n        `${BASE_URL}/discover/movie?with_genres=28&language=pt-BR&api_key=${KEY_API}`\r\n    )\r\n  \r\n    const comedy = useRequestData ([], \r\n        `${BASE_URL}/discover/movie?with_genres=35&language=pt-BR&api_key=${KEY_API}`\r\n    )\r\n\r\n    const coverMovieRandon = Math.floor(Math.random() * (coverMovie.length -1))\r\n    const movieRandon = coverMovie[coverMovieRandon]\r\n    \r\n    const history = useHistory()\r\n\r\n    const onClickCard = () => {\r\n        goToMovie(history, \"batata\")\r\n    }\r\n    \r\n    const originaisNet = originais.map ((index => {\r\n        return <MoviesOriginaisNetflix  key={index.id} index={index} onClick={onClickCard}/>\r\n    })) \r\n\r\n    const recomendedNet = recomended.map ((index => {\r\n        return <MoviesRecomended key={index.id} index={index}/>\r\n    }))\r\n\r\n    const topNet = top.map ((index => {\r\n        return <MoviesTop key={index.id} index={index}/>\r\n    }))\r\n\r\n    const topAction = action.map ((index => {\r\n        return <MoviesAction key={index.id} index={index}/>\r\n    }))\r\n\r\n    const topComedy = comedy.map ((index => {\r\n        return <MoviesComedy key={index.id} index={index}/>\r\n    }))\r\n\r\n    return (\r\n\r\n        <ContainerPrincipal>\r\n            \r\n            <ContainerTopCoverMovie>\r\n                <TopCoverMovie movieRandon ={movieRandon}/>\r\n            </ContainerTopCoverMovie>\r\n\r\n            <h2>Originais Netflix</h2>\r\n            {originaisNet}\r\n           \r\n            <h2>Recomendados para Você</h2>\r\n            {recomendedNet}\r\n                    \r\n            <h2>Em Alta</h2>          \r\n            {topNet}\r\n\r\n            <h2>Ação</h2>          \r\n            {topAction}\r\n\r\n            <h2>Comédia</h2>   \r\n            {topComedy}             \r\n               \r\n        </ContainerPrincipal>\r\n    )\r\n}\r\n\r\nexport default HomePage"]},"metadata":{},"sourceType":"module"}